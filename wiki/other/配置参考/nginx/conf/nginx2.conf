user  www www;

worker_processes 4;

error_log  /var/log/nginx/nginx_error.log  crit;
#error_log  /var/log/nginx/nginx_error.log  debug_core;

pid        /usr/local/nginx/nginx.pid;

#Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 10000;

events {
  use epoll;
  worker_connections 10000;
}


http {
  include       mime.types;
  default_type  application/octet-stream;
  server_tokens off;
  #charset  utf-8;
  server_names_hash_bucket_size		128;
  client_header_buffer_size		32k;
  large_client_header_buffers		4 32k;
  client_max_body_size			16m;
  sendfile	on;
  tcp_nopush	on;
  keepalive_timeout	30;
  tcp_nodelay		on;

  gzip on;
  gzip_min_length  1k;
  gzip_buffers     4 16k;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_types       text/plain application/x-javascript text/css application/xml;
  gzip_vary on;
  log_format  oauth-access  '$remote_addr - $remote_user [$time_local] "$request" '
              '$status $body_bytes_sent "$http_referer" '
              '"$http_user_agent" "$http_x_forwarded_for" ';

  limit_conn_zone   $binary_remote_addr zone=DenyConn:20m;
  limit_req_zone  $binary_remote_addr zone=ReqLimit:20m rate=10r/s;

  upstream wwwoauth {
    server 10.0.10.5:8082 max_fails=2 fail_timeout=10s;
    server 10.0.120.1:8082 backup;
    keepalive 10;
  }

  upstream ssloauth {  
    server 10.0.10.5:8445 max_fails=2 fail_timeout=10s;
    server 10.0.120.1:8445 backup;
    keepalive 10;
  }

  proxy_cache_path		/ng_cache/proxy levels=1:2 keys_zone=oauth:10m inactive=2h max_size=20G;
  proxy_temp_path		/ng_cache/temp;


  server {
    listen      443;
    ssl		on;
    include			www.kadang.com_ssl.conf;
    server_name			oauth.kadang.com;

   if (-d $request_filename) {
      rewrite ^/(.*)([^/])$ http://$host/$1$2/ permanent;
    }

    location ~ /Kpurged(/.*) {
      allow 183.129.152.2;
      allow 122.224.167.186;
      allow 122.224.167.188;
      allow 127.0.0.1;
      deny all;
      proxy_cache_purge		oauth "$scheme$host$1$is_args$args";
    }
    location ~* .*\.(gif|jpg|jpeg|png|bmp|swf|htm|html|ico)$ {
      proxy_redirect 		off;
      proxy_pass		https://ssloauth;
      proxy_http_version	1.1;
      proxy_headers_hash_max_size	1024;
      proxy_headers_hash_bucket_size	128;
      proxy_set_header          Host $host;
      proxy_set_header          X-Real-IP $remote_addr;
      proxy_set_header		X-Forwarded-For $remote_addr;
      proxy_set_header 		X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header 		Accept-Encoding "gzip, deflate";
      proxy_connect_timeout     10s;
      proxy_read_timeout        30s;
      proxy_buffering		on;
      proxy_buffer_size		4k;
      proxy_buffers		256 4k;
      proxy_busy_buffers_size	8k;
      proxy_cache		oauth;
      #proxy_no_cache 		$cookie_nocache $arg_nocache$arg_comment $http_pragma $http_authorization;
      #proxy_cache_bypass 	$cookie_nocache $arg_nocache$arg_comment $http_pragma $http_authorization;
      proxy_cache_key 		"$scheme$host$uri$is_args$args";
      proxy_cache_methods 	GET HEAD;
      proxy_cache_valid		200 301 302 304 2h;
      proxy_cache_valid		404 1m;
      proxy_next_upstream	error timeout invalid_header http_500 http_502 http_503 http_504;
      add_header      		KDNginx-Cache "$upstream_cache_status from oauth.kadang.com";
      expires			1d;
      #limit_conn                DenyConn      10;
      #limit_req			zone=ReqLimit burst=15;
    }
    location ~ ^/oauth {
      proxy_redirect 		off;
      proxy_pass                https://ssloauth;
      proxy_headers_hash_max_size	1024;
      proxy_headers_hash_bucket_size	128;
      proxy_set_header		Host $host;
      proxy_set_header		X-Real-IP $remote_addr;
      proxy_set_header          X-Forwarded-For $remote_addr;
      proxy_set_header 		X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout     30s;
      proxy_read_timeout        60s;
      proxy_buffering           on;
      proxy_buffer_size         4k;
      proxy_buffers     	256 4k;
      proxy_busy_buffers_size   8k;
      proxy_cache               off;
      proxy_next_upstream       error timeout invalid_header http_500 http_502 http_503 http_504;
      #limit_conn                DenyConn      10;
      #limit_req			zone=ReqLimit burst=15;
    }

    location /oauth_status {
      stub_status on;
      access_log   off;
    }

    access_log  /var/log/nginx/oauth_access_ssl.log oauth-access; 
  }






  server {
    listen      80;
    server_name                 oauth.kadang.com;

   if (-d $request_filename) {
      rewrite ^/(.*)([^/])$ http://$host/$1$2/ permanent;
    }

    location ~ /Kpurged(/.*) {
      allow 183.129.152.2;
      allow 122.224.167.186;
      allow 122.224.167.188;
      allow 127.0.0.1;
      deny all;
      proxy_cache_purge         oauth "$scheme$host$1$is_args$args";
    }
    location ~* .*\.(gif|jpg|jpeg|png|bmp|swf|htm|html|ico)$ {
      proxy_redirect            off;
      proxy_pass                http://wwwoauth;
      proxy_http_version        1.1;
      proxy_headers_hash_max_size       1024;
      proxy_headers_hash_bucket_size    128;
      proxy_set_header          Host $host;
      proxy_set_header          X-Real-IP $remote_addr;
      proxy_set_header          X-Forwarded-For $remote_addr;
      proxy_set_header          X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header          Accept-Encoding "gzip, deflate";
      proxy_connect_timeout     10s;
      proxy_read_timeout        30s;
      proxy_buffering           on;
      proxy_buffer_size         4k;
      proxy_buffers             256 4k;
      proxy_busy_buffers_size   8k;
      proxy_cache               oauth;
      #proxy_no_cache           $cookie_nocache $arg_nocache$arg_comment $http_pragma $http_authorization;
      #proxy_cache_bypass       $cookie_nocache $arg_nocache$arg_comment $http_pragma $http_authorization;
      proxy_cache_key           "$scheme$host$uri$is_args$args";
      proxy_cache_methods       GET HEAD;
      proxy_cache_valid         200 301 302 304 2h;
      proxy_cache_valid         404 1m;
      proxy_next_upstream       error timeout invalid_header http_500 http_502 http_503 http_504;
      add_header                KDNginx-Cache "$upstream_cache_status from oauth.kadang.com";
      expires                   1d;
      #limit_conn                DenyConn      10;
      #limit_req                        zone=ReqLimit burst=15;
    }
    location ~ ^/oauth {
      proxy_redirect            off;
      proxy_pass                http://wwwoauth;
      proxy_headers_hash_max_size       1024;
      proxy_headers_hash_bucket_size    128;
      proxy_set_header          Host $host;
      proxy_set_header          X-Real-IP $remote_addr;
      proxy_set_header          X-Forwarded-For $remote_addr;
      proxy_set_header          X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_connect_timeout     30s;
      proxy_read_timeout        60s;
      proxy_buffering           on;
      proxy_buffer_size         4k;
      proxy_buffers             256 4k;
      proxy_busy_buffers_size   8k;
      proxy_cache               off;
      proxy_next_upstream       error timeout invalid_header http_500 http_502 http_503 http_504;
      #limit_conn                DenyConn      10;
      #limit_req                        zone=ReqLimit burst=15;
    }

    location /oauth_status {
      stub_status on;
      access_log   off;
    }

    access_log  /var/log/nginx/oauth_access.log oauth-access; 
  }

}
